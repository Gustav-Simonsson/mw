CREATE TABLE IF NOT EXISTS events (
id SERIAL,
headline text NOT NULL,
outcome boolean,
oracle_keys_id int NOT NULL,
event_pubkey bytea NOT NULL,
event_privkey_enc_with_oracle_no_pubkey bytea NOT NULL,
event_privkey_enc_with_oracle_yes_pubkey bytea NOT NULL,
PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS oracle_keys (
id SERIAL,
rsa_no_pubkey bytea NOT NULL,
rsa_no_privkey bytea NOT NULL,
rsa_yes_pubkey bytea NOT NULL,
rsa_yes_privkey bytea NOT NULL,
aes_passphrase_enc_no_privkey bytea,
aes_passphrase_enc_yes_privkey bytea,
PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS contracts (
id SERIAL,
event_id int REFERENCES events (id) NOT NULL,
giver_ec_pubkey bytea,
taker_ec_pubkey bytea,
giver_enc_ec_privkey bytea,
taker_enc_ec_privkey bytea,
giver_rsa_pubkey bytea,
taker_rsa_pubkey bytea,
giver_enc_rsa_privkey bytea,
taker_enc_rsa_privkey bytea,
event_key_enc_with_oracle_yes_and_giver_keys bytea,
event_key_enc_with_oracle_no_and_taker_keys bytea,
t2_raw bytea,
t2_hash bytea,
t2_sighash_input_0 bytea,
t2_sighash_input_1 bytea,
t3_raw bytea,
t3_hash bytea,
PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS contract_events (
id SERIAL,
time timestamp without time zone NOT NULL,
description text NOT NULL,
PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS contract_events_maps (
contract_id int REFERENCES contracts (id) NOT NULL,
contract_event_id int REFERENCES contract_events (id) NOT NULL
);

grant all privileges on schema public to mw;
grant all privileges on oracle_keys to mw;
grant all privileges on sequence oracle_keys_id_seq to mw;
grant all privileges on events to mw;
grant all privileges on sequence events_id_seq  to mw;
grant all privileges on contracts  to mw;
grant all privileges on sequence contracts_id_seq to mw;
grant all privileges on contract_events to mw;
grant all privileges on sequence contract_events_id_seq to mw;
grant all privileges on contract_events_maps to mw;
